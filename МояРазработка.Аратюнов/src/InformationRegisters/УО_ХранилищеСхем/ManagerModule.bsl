#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
Функция Схема(РегистрацияСхемы) Экспорт
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	УО_ХранилищеСхем.Схема КАК Схема
		|ИЗ
		|	РегистрСведений.УО_ХранилищеСхем КАК УО_ХранилищеСхем
		|ГДЕ
		|	УО_ХранилищеСхем.РегистрацияСхемы = &РегистрацияСхемы";
	
	Запрос.УстановитьПараметр("РегистрацияСхемы", РегистрацияСхемы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Схема.Получить();
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецФункции

Процедура ДобавитьСхему(РегистрацияСхемы, Размещение = Неопределено, Схема = Неопределено) Экспорт
	
	Движение = СоздатьМенеджерЗаписи();
	Движение.РегистрацияСхемы = РегистрацияСхемы;
	
	Движение.Прочитать();	// Если запись уже существует в базе?
	
	Если Схема = Неопределено Тогда
		Если Размещение = Неопределено Тогда
			Схема = СхемаИзМакета(РегистрацияСхемы);
		Иначе
			Схема = СхемаИзОперативки(Размещение);
		КонецЕсли;
	КонецЕсли;
	
	// Урок 66
	Если Движение.РегистрацияСхемы.Пустая() Тогда	// т.к. измерение РегистрацияСхемы не составного типа -> значения Непределено быть не может
		// Это значит что запись делается новая т.к. измерение пустое
		Движение.РегистрацияСхемы = РегистрацияСхемы;
	Иначе
		// Запись уже существует
		Если СхемыИдентичны(Схема, Движение.Схема.Получить()) Тогда
			// Снижаем нагрузку на систему, если точно такая же сжема есть в базе
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	Движение.Схема = Новый ХранилищеЗначения(Схема, Новый СжатиеДанных(9));
	Движение.Записать(Истина);
	
КонецПроцедуры

Функция СхемаИзМакета(РегистрацияСхемы)

	ОбъектМетаданныхМакета = Метаданные.НайтиПоПолномуИмени(РегистрацияСхемы.ПутьКИсточнику);
	Если ОбъектМетаданныхМакета = Неопределено Тогда
		ВызватьИсключение "Макет с указанным именем не обнаружен";
	КонецЕсли;

	// Нужно узнать является ли макетом
	ОбъектМетаданныхРодитель = ОбъектМетаданныхМакета.Родитель();
	// Если это общий макет
	Если ТипЗнч(ОбъектМетаданныхРодитель) = Тип("ОбъектМетаданныхКонфигурация") Тогда
		Возврат ПолучитьОбщийМакет(ОбъектМетаданныхМакета.Имя);
	// Если макет у объекта
	ИначеЕсли ТипЗнч(ОбъектМетаданныхРодитель) = Тип("ОбъектМетаданных") Тогда
		Менеджер = Новый (СтрЗаменить(ОбъектМетаданныхРодитель.ПолноеИмя(), ".", "Менеджер."));
		Возврат Менеджер.ПолучитьМакет(ОбъектМетаданныхМакета.Имя);
	КонецЕсли;
	
КонецФункции

Функция СхемаИзОперативки(Размещение)
	
	Данные = ПолучитьИзВременногоХранилища(Размещение);
	ЧтениеДанных = Новый ЧтениеДанных(Данные);
	Текст = ЧтениеДанных.ПрочитатьСимволы();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Текст);
	Возврат СериализаторXDTO.ПрочитатьXML(ЧтениеXML, Тип("СхемаКомпоновкиДанных"));
		
КонецФункции

Функция СхемаСуществует(РегистрацияСхемы) Экспорт // здесь Знач избыточен т.к. мы переходим с Сервера на Сервер

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	NULL КАК Поле1
		|ИЗ
		|	РегистрСведений.УО_ХранилищеСхем КАК УО_ХранилищеСхем
		|ГДЕ
		|	УО_ХранилищеСхем.РегистрацияСхемы = &РегистрацияСхемы";
	
	Запрос.УстановитьПараметр("РегистрацияСхемы", РегистрацияСхемы);
	
	РезультатЗапроса = Запрос.Выполнить();

	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

Функция СхемыИдентичны(Схема1, Схема2)

	// Как можно сравнить 2-е СКД?
    // СКД можно представить в виде текста, сравниваем текстове представление схем

	Возврат ЗначениеВСтрокуВнутр(Схема1) = ЗначениеВСтрокуВнутр(Схема2)
	
КонецФункции

#КонецОбласти 
 
#КонецЕсли