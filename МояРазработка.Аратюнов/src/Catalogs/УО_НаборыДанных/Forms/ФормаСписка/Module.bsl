
&НаКлиенте
Процедура СдвинутьНаборДанных(Команда)

	ПоказатьОповещениеПользователя(Команда.Имя);

КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Отказ = Не Элементы.ФормаСоздать.Доступность;

КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = Элемент.ТекущиеДанные;
	Элементы.ФормаСоздать.Доступность = 
		ДанныеСтроки = Неопределено
		ИЛИ Строка(ДанныеСтроки.ВидНабора) = "Объединение";
	
	Элементы.СписокКонтекстноеМенюСоздать.Доступность = Элементы.ФормаСоздать.Доступность; 
	Элементы.СписокКонтекстноеМенюПеремещение.Доступность = 
			ДанныеСтроки <> Неопределено
			И ДанныеСтроки.Записей > 1;
			
	Если Элементы.СписокКонтекстноеМенюПеремещение.Доступность Тогда
		ОпределитьДоступностьПодПунктов( Элемент.ТекущаяСтрока,
							Элементы.СписокКонтекстноеМенюПереместитьВверх.Доступность,	
							Элементы.СписокКонтекстноеМенюПереместитьВниз.Доступность);	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	// Выбрана пустая область списка
	Если Строка = Неопределено Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
	
	// Выбран корневой уровень списка
	Если Строка.Пустая() Тогда
		Возврат;	
	КонецЕсли;
	
	// Выбран набор данных получателя не Объединение
	ДанныеСтрокиПолучателя = Элемент.ДанныеСтроки(Строка);
	Если Строка(ДанныеСтрокиПолучателя.ВидНабора) <> "Объединение" Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;		
	КонецЕсли;
	
	// Выбран набор данных объединение вложенный в перетаскиваемый
	Если НаборПолучателяПодчиненТекущему(Элемент.ТекущаяСтрока, Строка) Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НаборПолучателяПодчиненТекущему(Знач ТекущийНабор, Знач НаборПолучателя)
	Возврат Справочники.УО_НаборыДанных.ЯвляетсяПодчиненным(ТекущийНабор, НаборПолучателя);		
КонецФункции

&НаСервереБезКонтекста
Процедура ОпределитьДоступностьПодПунктов(Знач НаборДанных, ДоступностьВверх, ДоступностьВниз)

	РегистрыСведений.УО_Индексы.ПроверитьСоседниеНаборы(НаборДанных, ДоступностьВверх, ДоступностьВниз);
//	ДоступностьВверх = Справочники.УО_НаборыДанных.ПредыдущийНабор(НаборДанных) <> Неопределено;
//	ДоступностьВниз = Справочники.УО_НаборыДанных.СледующийНабор(НаборДанных) <> Неопределено;

КонецПроцедуры